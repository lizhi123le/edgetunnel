name: 混淆当前版本源码

on:
  push:
    branches: 
      - main
  workflow_dispatch:

jobs:
  obfuscate:
    if: |
      github.event_name == 'workflow_dispatch' || 
      github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'

      - name: Install dependencies
        run: |
          npm install
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Install Source Dependencies
        if: github.event_name == 'workflow_dispatch' || env.has_update == 'true'
        working-directory: ${{ env.SOURCE_DIR }}
        run: |
          set -euo pipefail
          if [ -f package-lock.json ] || [ -f package.json ]; then
            echo "Installing dependencies with npm ci..."
            npm ci --prefer-offline --no-audit --progress=false || {
              echo "npm ci failed, falling back to npm install..."
              npm install
            }
          else
            echo "No package.json in source directory, skipping dependency installation."
          fi

      - name: Install Repository Dependencies
        if: github.event_name == 'workflow_dispatch' || env.has_update == 'true'
        working-directory: ${{ github.workspace }}
        run: |
          set -euo pipefail
          if [ -f package-lock.json ] || [ -f package.json ]; then
            echo "Installing dependencies with npm ci..."
            npm ci --prefer-offline --no-audit --progress=false || {
              echo "npm ci failed, falling back to npm install..."
              npm install
            }
          else
            echo "No package.json in repository, skipping dependency installation."
          fi

      - name: Debug repository contents
        run: |
          set -euo pipefail
          echo "Current working directory: $(pwd)"
          echo "Listing all files in repository:"
          find . -type f
          echo "Searching for _worker.js:"
          find . -name "_worker.js" || echo "No _worker.js found in any directory"

      - name: 检查备份文件是否存在
        run: |
          set -euo pipefail
          # Define file paths (update if _worker.js is in a subdirectory, e.g., src/_worker.js)
          WORKER_FILE="_worker.js"
          BACKUP_FILE="_worker.js.backup"
          TEMP_FILE="_worker_temp.js"

          # Check if _worker.js exists
          if [ ! -f "$WORKER_FILE" ]; then
            echo "Error: $WORKER_FILE does not exist in $(pwd)"
            find . -name "_worker.js" || echo "No _worker.js found in any directory"
            exit 1
          fi

          # Create backup if it doesn't exist
          echo "Creating backup: $BACKUP_FILE"
          cp "$WORKER_FILE" "$BACKUP_FILE" || {
            echo "Error: Failed to create $BACKUP_FILE"
            exit 1
          }

          # Create _worker_temp.js
          echo "Creating $TEMP_FILE from $BACKUP_FILE..."
          cp "$BACKUP_FILE" "$TEMP_FILE" || {
            echo "Error: Failed to create $TEMP_FILE"
            exit 1
          }

          # Verify _worker_temp.js was created
          if [ ! -f "$TEMP_FILE" ]; then
            echo "Error: $TEMP_FILE not found in $(pwd)"
            exit 1
          fi
          echo "$TEMP_FILE created successfully at $(pwd)/$TEMP_FILE"
          ls -la

      - name: 混淆代码
        run: |
          set -euo pipefail
          echo "Current directory before build: $(pwd)"
          echo "Files in current directory:"
          ls -la
          npm run build

      - name: 提交更改
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add _worker.js _worker.js.backup
          if git diff --cached --quiet; then
            echo "没有文件更改，跳过提交"
          else
            git commit -m "混淆 _worker.js 文件并备份原文件"
          fi

      - name: 推送更改
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

